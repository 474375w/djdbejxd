-- 创建ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")

-- 服务
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- GUI库
local Library = {}
Library.__index = Library

-- 主题配置 
local Theme = {
    Background = Color3.fromRGB(30, 30, 35),
    Secondary = Color3.fromRGB(40, 40, 45), 
    Accent = Color3.fromRGB(65, 105, 225),
    Text = Color3.fromRGB(255, 255, 255),
    DarkText = Color3.fromRGB(180, 180, 180),
    Success = Color3.fromRGB(0, 255, 128),
    Error = Color3.fromRGB(255, 75, 75),
    Hover = Color3.fromRGB(50, 50, 55)
}

-- 工具函数
local function CreateTween(object, properties, duration, style)
    local tweenInfo = TweenInfo.new(
        duration or 0.3,
        style or Enum.EasingStyle.Quad,
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(object, tweenInfo, properties)
    return tween
end

local function AddRippleEffect(button)
    button.ClipsDescendants = true
    
    button.MouseButton1Down:Connect(function(x, y)
        local ripple = Instance.new("Frame")
        ripple.Position = UDim2.new(0, x - button.AbsolutePosition.X, 0, y - button.AbsolutePosition.Y)
        ripple.Size = UDim2.new(0, 0, 0, 0)
        ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ripple.BackgroundTransparency = 0.6
        ripple.AnchorPoint = Vector2.new(0.5, 0.5)
        ripple.Parent = button
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = ripple
        
        local targetSize = UDim2.new(0, math.max(button.AbsoluteSize.X, button.AbsoluteSize.Y) * 2, 0, math.max(button.AbsoluteSize.X, button.AbsoluteSize.Y) * 2)
        
        CreateTween(ripple, {
            Size = targetSize,
            BackgroundTransparency = 1
        }, 0.5):Play()
        
        game.Debris:AddItem(ripple, 0.5)
    end)
end

-- 创建主窗口
function Library.new(name)
    local window = Instance.new("Frame")
    window.Name = name
    window.Size = UDim2.new(0, 450, 0, 350)
    window.Position = UDim2.new(0.5, -225, 0.5, -175)
    window.BackgroundColor3 = Theme.Background
    window.BorderSizePixel = 0
    window.Parent = ScreenGui
    
    -- 圆角
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = window
    
    -- 阴影
    local shadow = Instance.new("ImageLabel")
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.Size = UDim2.new(1, 47, 1, 47)
    shadow.ZIndex = 0
    shadow.Image = "rbxassetid://6014261993"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.5
    shadow.Parent = window
    
    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.BackgroundColor3 = Theme.Secondary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = window
    
    Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 8)
    
    local title = Instance.new("TextLabel")
    title.Text = name
    title.Size = UDim2.new(1, -20, 1, 0)
    title.Position = UDim2.new(0, 15, 0, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Theme.Text
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Font = Enum.Font.GothamBold
    title.TextSize = 14
    title.Parent = titleBar
    
    -- 关闭按钮
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 3)
    closeButton.BackgroundColor3 = Theme.Error
    closeButton.Text = "×"
    closeButton.TextColor3 = Theme.Text
    closeButton.TextSize = 20
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = titleBar
    closeButton.BackgroundTransparency = 1
    
    Instance.new("UICorner", closeButton).CornerRadius = UDim.new(0, 6)
    
    closeButton.MouseEnter:Connect(function()
        CreateTween(closeButton, {BackgroundTransparency = 0}):Play()
    end)
    
    closeButton.MouseLeave:Connect(function()
        CreateTween(closeButton, {BackgroundTransparency = 1}):Play()
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    -- 内容区域
    local content = Instance.new("ScrollingFrame")
    content.Size = UDim2.new(1, -20, 1, -45)
    content.Position = UDim2.new(0, 10, 0, 40)
    content.BackgroundTransparency = 1
    content.ScrollBarThickness = 3
    content.ScrollBarImageColor3 = Theme.Accent
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.Parent = window
    
    -- 自动调整画布大小
    content:GetPropertyChangedSignal("AbsoluteCanvasSize"):Connect(function()
        content.CanvasSize = UDim2.new(0, 0, 0, content.AbsoluteCanvasSize.Y)
    end)
    
    -- 窗口拖动
    local dragging = false
    local dragStart = nil
    local startPos = nil

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            window.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    local gui = setmetatable({
        window = window,
        content = content
    }, Library)
    
    return gui
end

-- 添加按钮
function Library:AddButton(text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 35)
    button.Position = UDim2.new(0, 5, 0, (#self.content:GetChildren() * 40))
    button.BackgroundColor3 = Theme.Secondary
    button.Text = text
    button.TextColor3 = Theme.Text
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.BorderSizePixel = 0
    button.AutoButtonColor = false
    button.Parent = self.content
    
    Instance.new("UICorner", button).CornerRadius = UDim.new(0, 6)
    
    AddRippleEffect(button)
    
    button.MouseEnter:Connect(function()
        CreateTween(button, {BackgroundColor3 = Theme.Hover}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        CreateTween(button, {BackgroundColor3 = Theme.Secondary}):Play()
    end)
    
    button.MouseButton1Click:Connect(callback)
    return button
end

-- 添加开关
function Library:AddToggle(text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, -10, 0, 35)
    toggleFrame.Position = UDim2.new(0, 5, 0, (#self.content:GetChildren() * 40))
    toggleFrame.BackgroundColor3 = Theme.Secondary
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Parent = self.content
    
    Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 6)
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -65, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Theme.Text
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 40, 0, 20)
    toggleButton.Position = UDim2.new(1, -50, 0.5, -10)
    toggleButton.BackgroundColor3 = default and Theme.Success or Theme.Error
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggleFrame
    
    Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(1, 0)
    
    local circle = Instance.new("Frame")
    circle.Size = UDim2.new(0, 16, 0, 16)
    circle.Position = UDim2.new(default and 1 or 0, default and -18 or 2, 0.5, -8)
    circle.BackgroundColor3 = Theme.Text
    circle.BorderSizePixel = 0
    circle.Parent = toggleButton
    
    Instance.new("UICorner", circle).CornerRadius = UDim.new(1, 0)
    
    local enabled = default or false
    
    local function toggle()
        enabled = not enabled
        CreateTween(toggleButton, {
            BackgroundColor3 = enabled and Theme.Success or Theme.Error
        }):Play()
        CreateTween(circle, {
            Position = enabled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        }):Play()
        callback(enabled)
    end
    
    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggle()
        end
    end)
    
    label.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            toggle()
        end
    end)
    
    return toggleFrame
end

-- 添加滑块
    function Window:AddSlider(text, min, max, default, callback)
        local SliderFrame = CreateElement("Frame", {
            Size = UDim2.new(1, -10, 0, 50),
            Position = UDim2.new(0, 5, 0, (#ContentArea:GetChildren() * 40)),
            BackgroundColor3 = Theme.Secondary,
            Parent = ContentArea,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, 6),
            Parent = SliderFrame
        })
        
        local SliderLabel = CreateElement("TextLabel", {
            Size = UDim2.new(1, -65, 0, 25),
            Position = UDim2.new(0, 10, 0, 0),
            BackgroundTransparency = 1,
            Text = text,
            TextColor3 = Theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = SliderFrame
        })
        
        local ValueLabel = CreateElement("TextLabel", {
            Size = UDim2.new(0, 50, 0, 25),
            Position = UDim2.new(1, -60, 0, 0),
            BackgroundTransparency = 1,
            Text = tostring(default),
            TextColor3 = Theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            Parent = SliderFrame
        })
        
        local SliderBG = CreateElement("Frame", {
            Size = UDim2.new(1, -20, 0, 4),
            Position = UDim2.new(0, 10, 0, 35),
            BackgroundColor3 = Theme.Background,
            Parent = SliderFrame,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(1, 0),
            Parent = SliderBG
        })
        
        local SliderFill = CreateElement("Frame", {
            Size = UDim2.new((default - min)/(max - min), 0, 1, 0),
            BackgroundColor3 = Theme.Accent,
            Parent = SliderBG,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(1, 0),
            Parent = SliderFill
        })
        
        local SliderButton = CreateElement("TextButton", {
            Size = UDim2.new(0, 12, 0, 12),
            Position = UDim2.new((default - min)/(max - min), -6, 0.5, -6),
            BackgroundColor3 = Theme.Text,
            Text = "",
            Parent = SliderBG,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(1, 0),
            Parent = SliderButton
        })
        
        local Dragging = false
        
        SliderButton.MouseButton1Down:Connect(function()
            Dragging = true
        end)
        
-- 继续滑块的实现
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                Dragging = false
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and Dragging then
                local mousePos = UserInputService:GetMouseLocation().X
                local framePos = SliderBG.AbsolutePosition.X
                local frameSize = SliderBG.AbsoluteSize.X
                
                local position = math.clamp((mousePos - framePos) / frameSize, 0, 1)
                local value = math.floor(min + (position * (max - min)))
                
                ValueLabel.Text = tostring(value)
                SliderFill.Size = UDim2.new(position, 0, 1, 0)
                SliderButton.Position = UDim2.new(position, -6, 0.5, -6)
                
                callback(value)
            end
        end)
        
        return SliderFrame
    end
    
    -- 添加下拉菜单
    function Window:AddDropdown(text, options, default, callback)
        local DropdownFrame = CreateElement("Frame", {
            Size = UDim2.new(1, -10, 0, 35),
            Position = UDim2.new(0, 5, 0, (#ContentArea:GetChildren() * 40)),
            BackgroundColor3 = Theme.Secondary,
            Parent = ContentArea,
            BorderSizePixel = 0,
            ClipsDescendants = true
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, 6),
            Parent = DropdownFrame
        })
        
        local DropdownButton = CreateElement("TextButton", {
            Size = UDim2.new(1, 0, 0, 35),
            BackgroundTransparency = 1,
            Text = "",
            Parent = DropdownFrame
        })
        
        local DropdownLabel = CreateElement("TextLabel", {
            Size = UDim2.new(1, -35, 1, 0),
            Position = UDim2.new(0, 10, 0, 0),
            BackgroundTransparency = 1,
            Text = text,
            TextColor3 = Theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = DropdownButton
        })
        
        local SelectedLabel = CreateElement("TextLabel", {
            Size = UDim2.new(0, 100, 1, 0),
            Position = UDim2.new(1, -110, 0, 0),
            BackgroundTransparency = 1,
            Text = default or "Select...",
            TextColor3 = Theme.DarkText,
            Font = Enum.Font.Gotham,
            TextSize = 12,
            Parent = DropdownButton
        })
        
        local Arrow = CreateElement("TextLabel", {
            Size = UDim2.new(0, 20, 1, 0),
            Position = UDim2.new(1, -25, 0, 0),
            BackgroundTransparency = 1,
            Text = "▼",
            TextColor3 = Theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 12,
            Parent = DropdownButton
        })
        
        local OptionsFrame = CreateElement("Frame", {
            Size = UDim2.new(1, -10, 0, #options * 30),
            Position = UDim2.new(0, 5, 0, 40),
            BackgroundColor3 = Theme.Background,
            BorderSizePixel = 0,
            Visible = false,
            Parent = DropdownFrame
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, 6),
            Parent = OptionsFrame
        })
        
        local IsOpen = false
        
        local function ToggleDropdown()
            IsOpen = not IsOpen
            CreateTween(Arrow, {Rotation = IsOpen and 180 or 0}):Play()
            CreateTween(DropdownFrame, {Size = IsOpen and UDim2.new(1, -10, 0, 45 + #options * 30) or UDim2.new(1, -10, 0, 35)}):Play()
            OptionsFrame.Visible = IsOpen
        end
        
        DropdownButton.MouseButton1Click:Connect(ToggleDropdown)
        
        for i, option in ipairs(options) do
            local OptionButton = CreateElement("TextButton", {
                Size = UDim2.new(1, 0, 0, 30),
                Position = UDim2.new(0, 0, 0, (i-1) * 30),
                BackgroundTransparency = 1,
                Text = option,
                TextColor3 = Theme.Text,
                Font = Enum.Font.Gotham,
                TextSize = 12,
                Parent = OptionsFrame
            })
            
            OptionButton.MouseEnter:Connect(function()
                CreateTween(OptionButton, {BackgroundTransparency = 0.9}):Play()
            end)
            
            OptionButton.MouseLeave:Connect(function()
                CreateTween(OptionButton, {BackgroundTransparency = 1}):Play()
            end)
            
            OptionButton.MouseButton1Click:Connect(function()
                SelectedLabel.Text = option
                ToggleDropdown()
                callback(option)
            end)
        end
        
        return DropdownFrame
    end
    
    -- 添加文本输入框
    function Window:AddTextbox(text, placeholder, callback)
        local TextboxFrame = CreateElement("Frame", {
            Size = UDim2.new(1, -10, 0, 35),
            Position = UDim2.new(0, 5, 0, (#ContentArea:GetChildren() * 40)),
            BackgroundColor3 = Theme.Secondary,
            Parent = ContentArea,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, 6),
            Parent = TextboxFrame
        })
        
        local TextboxLabel = CreateElement("TextLabel", {
            Size = UDim2.new(0.4, -10, 1, 0),
            Position = UDim2.new(0, 10, 0, 0),
            BackgroundTransparency = 1,
            Text = text,
            TextColor3 = Theme.Text,
            Font = Enum.Font.Gotham,
            TextSize = 14,
            TextXAlignment = Enum.TextXAlignment.Left,
            Parent = TextboxFrame
        })
        
        local Textbox = CreateElement("TextBox", {
            Size = UDim2.new(0.6, -20, 0, 25),
            Position = UDim2.new(0.4, 10, 0.5, -12.5),
            BackgroundColor3 = Theme.Background,
            Text = "",
            PlaceholderText = placeholder,
            TextColor3 = Theme.Text,
            PlaceholderColor3 = Theme.DarkText,
            Font = Enum.Font.Gotham,
            TextSize = 12,
            Parent = TextboxFrame,
            BorderSizePixel = 0
        })
        
        CreateElement("UICorner", {
            CornerRadius = UDim.new(0, 4),
            Parent = Textbox
        })
        
        Textbox.FocusLost:Connect(function(enterPressed)
            callback(Textbox.Text, enterPressed)
        end)
        
        return TextboxFrame
    end
    
    -- 窗口拖动功能
    local Dragging = false
    local DragStart = nil
    local StartPos = nil
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Dragging = true
            DragStart = input.Position
            StartPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local Delta = input.Position - DragStart
            MainFrame.Position = UDim2.new(
                StartPos.X.Scale,
                StartPos.X.Offset + Delta.X,
                StartPos.Y.Scale,
                StartPos.Y.Offset + Delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            Dragging = false
        end
    end)
    
    return Window
end

return GuiLibrary
